name: easy_birthday
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ">=3.4.3 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # Custom Packages
  kh_easy_dev:
    git:
      url: https://github.com/kobymashiach/kh_easy_dev

  # Firebase
  firebase_core: ^2.21.0
  firebase_auth: ^4.12.1
  cloud_firestore: ^4.12.2
  firebase_storage: ^11.2.8

  # State Management
  flutter_bloc: ^8.1.4

  # Localization
  flutter_localization: ^0.2.0
  flutter_localizations:
    sdk: flutter
  intl: ^0.19.0
  # Custom Localization
  slang: ^3.31.1
  slang_flutter: ^3.31.0

  # UI & Design
  cupertino_icons: ^1.0.6
  flutter_colorpicker: ^1.1.0
  flutter_svg: ^2.0.10+1
  google_fonts: ^6.2.1
  toggle_switch: ^2.3.0
  pin_code_fields: ^8.0.1

  # Audio & Video
  audioplayers: ^6.0.0
  ffmpeg_kit_flutter_full: ^6.0.3
  youtube_player_flutter: ^8.1.2

  # Networking
  dio: ^5.5.0+1
  http: ^1.1.0
  connectivity_plus: ^6.0.2

  # File Management
  file_picker: ^8.0.7
  path_provider: ^2.1.4

  # Data Storage & Encryption
  hive: ^2.2.3
  hive_flutter: ^1.1.0
  encrypt: ^5.0.3

  # Permissions & Device Info
  permission_handler: ^11.3.1
  package_info_plus: ^8.0.2

  # Animations & Graphics
  blobs: ^2.0.0

  # Web & URL Launching
  flutter_inappwebview: ^5.8.0
  url_launcher: ^6.2.5

  # Code Generation
  freezed: ^2.5.2
  json_annotation: ^4.9.0

  # Monetization
  in_app_purchase: ^3.2.0

flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/logo.png"

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    - assets/flags/
    - assets/illustrations/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: DanaYad
  #     fonts:
  #       - asset: assets/fonts/DanaYadAlefAlefAlef-Normal.otf
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
